from pyrogram import Client, filters
from pyrogram.types import Message

from os import listdir

# noinspection PyUnresolvedReferences
from utils.misc import modules_help, prefix

# noinspection PyUnresolvedReferences
from utils.scripts import format_exc


@Client.on_message(filters.command(["lback"], prefix) & filters.me)
async def backup_database_cmd(_: Client, message: Message):
    """
    Backup the database.
    """
    if len(message.command) == 1:
        await message.edit("[üòá] –ö–∞–∂–µ—Ç—Å—è —Ç—ã –Ω–µ —É–∫–∞–∑–∞–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –±–æ—Ç–∞.")
        return
    await message.edit_text("<b>–ö–æ–ø–∏—Ä—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...</b>")
    try:
        name = message.command[1].lower()
        folders = listdir('/root/')
        if name not in folders:
            await message.edit("[üòá] –¢–∞–∫–æ–≥–æ –±–æ—Ç–∞ –Ω–µ—Ç –≤ root –ø–∞–ø–∫–µ.")
            return
        folder = listdir('/root/' + name)
        for file in folder:
            if file.endswith(('.db', '.sqlite', '.sqlite3')):
                await message.reply_document(
                    document='/root/' + name + '/' + file,
                    caption='<code>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ <b>' + name + '</b></code>',
                )
                return await message.delete()
        folder = listdir('/root/' + name + '/assets')
        for file in folder:
            if file.endswith(('.db', '.sqlite', '.sqlite3')):
                await message.reply_document(
                    document='/root/' + name + '/assets/' + file,
                    caption='<code>–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞ <b>' + name + '</b></code>',
                )
                return await message.delete()
        await message.edit("[üòá] –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    except Exception as ex:
        await message.edit_text(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –±—ç–∫–∞–ø–Ω—É—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!\n\n"
            f"{format_exc(ex)}"
        )


modules_help['autobackup'] = {
    'lback [name]*': '<b>Backup database from folder</b>',
    'lbackall': '<b>Backup all databases</b>'
}
