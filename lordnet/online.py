from pyrogram.errors import RPCError

from helper import module, Message, Client, db, escape_html
from pyrogram.raw.functions.account import UpdateStatus
from pyrogram.filters import create, channel


status = db.get("status", {})


@module(commands=["online", "offline"], desc="–í–∫–ª—é—á–∏—Ç—å/–í—ã–∫–ª—é—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º")
async def fake_online(client: Client, message: Message):
    now = True if message.command[0] == "online" else False

    await client.send(UpdateStatus(offline=not now))

    await message.edit(
        f"<b>üåö –¢–µ–ø–µ—Ä—å –≤–∞—à —Å—Ç–∞—Ç—É—Å: <code>{'–û–Ω–ª–∞–π–Ω ‚úÖ' if now else '–û—Ñ—Ñ–ª–∞–π–Ω ‚õî'}</code></b>"
    )


@module(create(lambda _, __, m: status[m.chat.id]) & ~channel)
async def auto_read(client: Client, message: Message):
    try:
        await client.read_history(message.chat.id)
    except RPCError:
        pass


@module(commands=["read", "autoread"], desc="–ê–≤—Ç–æ-–ø—Ä–æ—á—Ç–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π")
async def autoread_cmd(_, message: Message):
    now = not status
    status[message.chat.id] = now
    db.set("status", status)

    await message.edit(
        f"<b>üåö Autoread –≤ —á–∞—Ç–µ {escape_html(message.chat.title)}: <code>{'–í–∫–ª—é—á—ë–Ω ‚úÖ' if now else '–í—ã–∫–ª—é—á–µ–Ω ‚õî'}</code></b>"
    )


made_by = "@lord_code"
